{
  "tools": [
    {
      "name": "create-repository",
      "description": "Creates a new repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "body": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The repository name. Must contain a combination of alphanumeric characters and may contain the special characters ., _, or -. Letters must be lowercase."
              },
              "description": {
                "type": "string",
                "description": "A short description to identify your repository. If the repository is public, this description is used to index your content on Docker Hub and in search engines, and is visible to users in search results."
              },
              "full_description": {
                "type": "string",
                "description": "detailed description",
                "maxLength": 25000
              },
              "registry": {
                "type": "string",
                "description": "registry address"
              },
              "is_private": {
                "type": "boolean",
                "description": "Repository access. If true, the repository is private and does not appear in search results. If false, the repository is public and appears in search results."
              }
            },
            "description": "Request body data"
          }
        },
        "required": ["namespace"]
      }
    },
    {
      "name": "list-repositories",
      "description": "Lists repositories under namespace",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "name": {
            "type": "string",
            "description": "Optionally search by repository name. If not provided, all repositories will be returned."
          },
          "ordering": {
            "type": "string",
            "description": "query parameter"
          },
          "media_types": {
            "type": "string",
            "description": "Comma-delimited list of media types. Optionally filter repositories by media types. Only repositories containing one or more artifacts with one of these media types will be returned.\n`null` should be added to the list to get repositories with image artifacts to handle legacy repositories.\n"
          },
          "content_types": {
            "type": "string",
            "description": "Comma-delimited list of content types.\nOptionally filter repositories by content types. Only repositories containing one or more artifacts with one of these content types will be returned.\n"
          },
          "page": {
            "type": "integer",
            "description": "Page number to get. Defaults to 1."
          },
          "page_size": {
            "type": "integer",
            "description": "Number of items to get per page. Defaults to 10. Max of 100."
          }
        },
        "required": ["namespace"]
      }
    },
    {
      "name": "get-repository-info",
      "description": "Gets repository info",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "check-repository",
      "description": "Check repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "update-repository-info",
      "description": "Updates repository info",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          },
          "body": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A short description to identify your repository. If the repository is public, this description is used to index your content on Docker Hub and in search engines, and is visible to users in search results.",
                "nullable": true
              },
              "full_description": {
                "type": "string",
                "nullable": true,
                "maxLength": 25000
              },
              "status": {
                "type": "integer",
                "enum": [6],
                "description": "Status of the repository:\n  * `1` - Active\n  * `6` - Archived\n"
              }
            },
            "description": "Request body data"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "get-repository-dockerfile",
      "description": "Gets dockerfile for repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "set-repository-dockerfile",
      "description": "Sets Dockerfile for repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          },
          "body": {
            "type": "object",
            "properties": {
              "contents": {
                "type": "string"
              }
            },
            "description": "Request body data"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "list-repository-tags",
      "description": "List repository tags",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          },
          "page": {
            "type": "integer",
            "description": "Page number to get. Defaults to 1."
          },
          "page_size": {
            "type": "integer",
            "description": "Number of items to get per page. Defaults to 10. Max of 100."
          },
          "architecture": {
            "type": "string",
            "description": "Filter to only items containing images supporting this architecture."
          },
          "os": {
            "type": "string",
            "description": "Filter to only items containing images supporting this operating system."
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "check-repository-tags",
      "description": "Check repository tags",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository"]
      }
    },
    {
      "name": "read-repository-tag",
      "description": "Read repository tag",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          },
          "tag": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository", "tag"]
      }
    },
    {
      "name": "check-repository-tag",
      "description": "Check repository tag",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "path parameter"
          },
          "repository": {
            "type": "string",
            "description": "path parameter"
          },
          "tag": {
            "type": "string",
            "description": "path parameter"
          }
        },
        "required": ["namespace", "repository", "tag"]
      }
    },
    {
      "name": "search",
      "description": "Search V4",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query parameter"
          },
          "badges": {
            "type": "string",
            "description": "Filter the results depending on image content type\n  * `official` - Docker Official Images\n  * `verified_publisher` - repositories from Docker Verified Publishers\n  * `open_source` - repositories from Docker Sponsored Open Source publishers\n  * `none` - 'repositories from the community'\n"
          },
          "type": {
            "type": "string",
            "description": "Filter on repository content type, either Docker Image, Docker Engine plugin or Docker Extension."
          },
          "categories": {
            "type": "string",
            "description": "Filter on categories (comma separated list), used with products, not repositories."
          },
          "operating_systems": {
            "type": "string",
            "description": "Filter on OS (comma separated list)."
          },
          "architectures": {
            "type": "string",
            "description": "Filter on architectures (comma separated list)."
          },
          "images": {
            "type": "string",
            "description": "Filter on image names (comma separated list)."
          },
          "extension_reviewed": {
            "type": "boolean",
            "description": "Filter on reviewed extensions."
          },
          "from": {
            "type": "integer",
            "description": "The number of documents to skip from the beginning of the result set for pagination. The combination of `from` and `size` (sum) can't exceed 2500."
          },
          "size": {
            "type": "integer",
            "description": "Maximum number of results to return, for pagination. `The combination of `from` and `size` (sum) can't exceed 2500."
          },
          "sort": {
            "type": "string",
            "description": "Sort results by a search field. Use `order` parameter to change the order of the result. If the `sort` field is not set, a best match sorting is used by default. When searching extensions, documents are sort alphabetically if none is provided."
          },
          "order": {
            "type": "string",
            "description": "Change the ordering of the results. When searching extensions, `asc` is the default order if none is provided."
          }
        },
        "required": ["query"]
      }
    },
    {
      "name": "docker-hardened-images",
      "description": "Docker Hardened Images (DHI) API. This API is used to query for mirrored DHIs in the namespace. It lists all the secure, minimal, production-ready images available to get near-zero CVEs and enterprise-grade SLA.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "The namespace to query for mirrored hardened repositories"
          }
        }
      }
    }
  ]
}
